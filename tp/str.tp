import lang;

class Parent {
    value: int;
    value2: int = 4;

    // 'this: *Parent' is inserted automatically before 'val: int'
    fn __new__(val: int) void {
        // 'super.__new__()' is inserted automatically here, calling Object.__new__
        this.value = val;
    }

    // polymorphic constructor
    fn __new__() void {
        this.__new__(42);
    }
}

class Child(Parent) {
    fn __new__(this: *Child) void {
        super.__new__();
    }
}

fn main() int {
    x := "asd";
    println("asd");
    return String.length(x);
}
