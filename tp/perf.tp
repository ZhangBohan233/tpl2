import lang;

require {
    clock
}

fn fib(n: int) int {
    if n < 2 {
        return n;
    } else {
        return fib(n - 2) + fib(n - 1);
    }
}

fn main() int {
    t0: int = clock();

    i: int;
    for i = 0; i < 1_000_000; ++i {
    }

    t1: int = clock();
    print(i);
    print(" loop with ++i time ");
    println(t1 - t0);

    for i = 0; i < 1_000_000; i = i + 1 {
    }

    t2: int = clock();
    print(i);
    print(" loop with i = i + 1 time ");
    println(t2 - t1);

    n: int = 30;
    x: int = fib(n);

    t3: int = clock();
    print(n);
    print(" fib time ");
    println(t3 - t2);

    array := new int[1000];
    for i = 0; i < 1_000_000; ++i {
        array[i % array.length] = i;
    }
    t4: int = clock();
    print(i);
    print(" heap array access time ");
    println(t4 - t3);

    return x;

}