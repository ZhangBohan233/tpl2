import lang

require {
    malloc
}

class A {
    xx: int;

    fn __new__(this: *A) void {
        super.__new__();
        this.xx = 1;
    }

    fn foo(this: *A, x: int) int {
        return this.xx + x;
    }
}

class B<T(Object)>(A) {
    t: *T;

    fn __new__(this: *B) void {
        super.__new__();

        this.xx = 6;
    }

    fn get(this: *B) *T {
        return this.t;
    }

    fn set(this: *B, t: *T) void {
        this.t = t;
    }
}

class X {
    value: int;

    fn __new__(this: *X, val: int) void {
        super.__new__();

        this.value = val;
    }
}

fn main() int {
    aa: *B<X> = new B<X>();
    aa.set(new X(34));
    cprintln(aa.t.value);
    return aa.get()
            .value;
}
