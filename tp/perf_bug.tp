import lang;

fn fib(n: int) int {
    if n < 2 {
        return n;
    } else {
        return fib(n - 2) + fib(n - 1);
    }
}

fn test_wrapper() void {

}

fn main() int {
    t0: int = _clock();

    i: int;
    for i = 0; i < 1_000_000; ++i {
    }

    t1: int = _clock();
    print(i);
    print(" loop with ++i time ");
    println(t1 - t0);

    for i = 0; i < 1_000_000; i = i + 1 {
    }

    t2: int = _clock();
    print(i);
    print(" loop with i = i + 1 time ");
    println(t2 - t1);

    n: int = 30;
    x: int = fib(n);

    t3: int = _clock();
    print(n);
    print(" fib time ");
    println(t3 - t2);

    array := new int[1000];
    for i = 0; i < 1_000_000; ++i {
        array[i % array.length] = i;
    }
    t4: int = _clock();
    print(i);
    print(" heap array access time ");
    println(t4 - t3);

    str := "asd";
    for i = 0; i < 50_000; ++i {
        str = str + (i as char);
    }
    t5: int = _clock();
    print(i);
    print(" string concat with gc ");
    println(t5 - t4);

    stop := new Integer(100_000);
    step := new Integer(1);
    for j := new Integer(0); j < stop; j += step {
    }

    t6: int = _clock();
    println();  // 最小复现方式: println()卡住, println("") 没问题
    print(stop);
    print(" number wrapper loop time ");  // 诡异的bug: 多一行少一行都没问题
    println(t6 - t5);

    return x;
}